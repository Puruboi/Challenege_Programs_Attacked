Instructions:
------------
1) There are 2 problem and you need to solve both the 2 problems.
2) Solution should work for all the inputs and get the desired output. Solutions with all outcomes are given more importance.
3) Please send the solution with the description if it works for all cases, otherwise please indicicate the results which are in-correct.

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Problem 1:
----------
Rearrange words

1) Arrange the words in alphabetical order based on only the "first" character (not the second character and further characters). 
2) If two words are starting with the same character then the same order of the words should be maintained from the original sentence. 
      
Constraints for this problem:
    Use char[] or Character[] array for the input and output. (e.g., avoid in-built java.lang.String or similar class to represent 'string', instead use char[] to solve the problem). 
    e.g., 
       Java: 
              char input[] = "The domestic dog is a domesticated form of wolf".toCharArray() 
       Python: 
              input = list('The domestic dog is a domesticated form of wolf')
       Javascript:
              input = Array.from('hello')

Example 1:
Input: 
       this is an impossible task
Output: 
       an is impossible this task

       Explanation:
       'a' is the lowest, followed by 'i' and 't' character.
       an - first word because of 'a'
       'is impossible' - 'is' comes before 'impossible' since 'is' appears in the orginial sentence before 'impossible'.
       'this task' - 'this' comes before 'task' since 'this' appears in the orginial sentence before 'task'.

Example 2:
Input: 
       the domestic dog is a domesticated form of wolf
Output:
       a domestic dog domesticated form is of the wolf


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Problem 2:
----------
Expand a given string with "spaces" and "swaps" 

   - Step 1: Expand with "spaces" from the center towards the start/end of the string in each step.
       i) string with no middle character adds a middle single space
              e.g. ""BATA" " becomes "BA TA" and becomes “B A T A”
       ii) string with middle character adds left and right space. A space is introduced before and after a 'character' or a 'substring'.
              e.g. ""BATIA" " becomes "BA T IA" and becomes "B A T I A"
   - Step 2: Once space is added in each step then it is followed by character swap (swap between character after left space and character before right space). Swap happens and continues between all the opposite characters till the center (space or middle character) of the string is reached.
       e.g.   
       "BA TA" becomes "BA TA"     (swap for middle space will be same)
       "B A T A" becomes "B T A A" (swap between A and T, followed by continuous swap till the middle empty space)

       e.g. 
       "BA T IA" becomes "BA T IA" (swap middle character T will be in the same position)
       "B A T I A" becomes “B I T A A” (swap between A and I, followed by continuous swap till the middle character ‘T’)

   - Step 3: Print the output
   - Step 4: Iterate from Step 1

All the intermediate outputs should be printed as below.

Example 1:
Input: 
       BATA
Output: 
       BA TA     # addition of space in middle, followed by swap in middle space
       B T A A   # addition of space (before A and after T) followed by swap of 'T' and 'A' followed by a swap for middle space.


Example 2:

Input: 
       BATIA
Output: 
       BA T IA     
       B I T A A 

Example 3:

Input: 
       CAPITOL
Outputs:
       CAP I TOL       # addition of space(before and after I) swaps 'I' which has no change since it is at the center
       CA T I P OL     # addition of space(before T and after P) swaps 'P' and 'T'. Followed by a swap of 'I.
       C O P I T A L   # addition of space(before A and after O) swaps 'A' and 'O'. Followed by a swap of 'T' and 'P'.  Followed by a swap of 'I'. (swap till the middle is reached)

Example 4:
Input: 
       CARDBOARD 
Output:
       CARD B OARD
       CAR O B D ARD
       CA A D B O R RD
       C R R O B D A A D

Example 5:
Input: 
       BATAMA
Output:
       BAT AMA
       BA A T MA
       B M T A A A

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

