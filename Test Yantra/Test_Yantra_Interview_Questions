{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Test_Yantra_Interview_Questions","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOLicagJ4hBdncegxzN/2k2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dp9kb8pfWPR3","executionInfo":{"status":"ok","timestamp":1621314330634,"user_tz":-330,"elapsed":6391,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"bab7d5a6-f4c0-4ad0-acdb-222b58b70c94"},"source":["# 1. WAP to get num as input and if it is EVEN  number square and print and display it\n","class Evnsqr:\n","  def __init__(self):\n","    self.e_sqr()\n","\n","  def evn_sqr(n):\n","    if n%2==0:\n","      return n*n\n","  def getter():\n","    a=int(input(\"Enter the starting number: \"))\n","    b=int(input(\"Enter the end range number: \"))\n","    return a,b\n","\n","  def e_sqr(self):\n","    a,b=getter()\n","    res=[]\n","    for i in range(a,b):\n","      a=(evn_sqr(i))\n","      if a!=None:\n","        res.append(a)\n","    print(res)\n","\n","user=Evnsqr()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter the starting number: 2\n","Enter the end range number: 6\n","[4, 16]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m1qzeiLzaYw6","executionInfo":{"status":"ok","timestamp":1621315458041,"user_tz":-330,"elapsed":23769,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"a0551285-de2f-4bad-cdab-266762902c5d"},"source":["# 2. WAP to check whether the character is alaphabet or not if alphabet  and print alphabet if number prnt number else invalid and display ASCII value of it\n","\n","def chk_alph(ch):\n","  if 'a'<=ch<='z' or 'A'<=ch<='Z':\n","    print(\"Entered Alphabet is:{} and its ASCII value is {} .\".format(ch,ord(ch)))\n","  elif '0'<=ch<='9':\n","    print(\"Entered character is a number :{} .\".format(ch))\n","  elif (not('a'<=ch<='z' or 'A'<=ch<='Z'or '0'<=ch<='9' or ch=='/n' or ch=='/t')): \n","    # /n is enter key and /t is tab key or space key \n","    print(\"Entered character is a special symbol:{} and its ASCII value is {} .\".format(ch,ord(ch)))\n","\n","def getter():\n","  a=input(\"Input the character: \")\n","  return a\n","\n","def main():\n","  a=1\n","  while a==1 or a=='1':\n","    a=int(input(\"Enter 1 to start/Continue or input any character   to exit() \"))\n","    if a==1 or a=='1':\n","      ch=getter()\n","      chk_alph(ch)\n","    else:\n","      print(\"You wished to exit()\")\n","      break\n","\n","main()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter 1 to start/Continue or input any character   to exit() 1\n","Input the character: 2\n","Entered character is a number :2 .\n","Enter 1 to start/Continue or input any character   to exit() 1\n","Input the character: r\n","Entered Alphabet is:r and its ASCII value is 114 .\n","Enter 1 to start/Continue or input any character   to exit() 1\n","Input the character: .\n","Entered character is a special symbol:. and its ASCII value is 46 .\n","Enter 1 to start/Continue or input any character   to exit() 0\n","You wished to exit()\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xOg7uiIre6TK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621057678954,"user_tz":-330,"elapsed":901,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"035642e6-485b-42ff-81be-2f8180711936"},"source":["# 3. Greatest of 4 nos \n","a,b,c,d=3,9,7,10\n","if a>b and a>c and a>d:\n","  print(a,'is greater')\n","elif b>c and b>d:\n","  print(b,'is greater')\n","elif c>d:\n","  print(c,'is greater')\n","else:\n","  print(d,'is greater')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["10 is greater\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RNBC74yUcl6S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621057810671,"user_tz":-330,"elapsed":6552,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"97980d43-afd8-47d1-eef0-d1c588cc7887"},"source":["# 4. Program to find relationship btw 2nos \n","a,b=input(),input()\n","if a>b:\n","  print('{} greater than {}'.format(a,b))\n","elif a<b:\n","  print('{} lesser than {}'.format(a,b))\n","else:\n","  print('{} EQUAL TO {}'.format(a,b))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3\n","4\n","3 lesser than 4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-fbsq3VzXKYu"},"source":["# 5.Greatest of 3 nos using Nested if "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"D1_ftlchgqQ8"},"source":["# 6.Basic Calculator "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"chwSSpnNhT5_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621057946234,"user_tz":-330,"elapsed":873,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"2f97d935-946d-4b27-ddfb-d4bb92df358c"},"source":["# 7.prgram which adds min 2 values and max 5 values\n","def add_1(a,b,c=0,d=0,e=0):\n","  print(a+b+c+d+e)\n","add_1(2,4)\n","add_1(2,4,5,6)\n","add_1(2,4,6,7,8)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["6\n","17\n","27\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D-geg6ewQEOC","executionInfo":{"status":"ok","timestamp":1621941824704,"user_tz":-330,"elapsed":511,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"8eea5233-3f53-4fdf-bd0b-cefabb120308"},"source":["# 9.WAP to count the occurence  of an specified character in a string b/w limits\n","def count_1(s,ch,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  \n","  c=0\n","  for i in range(start_index,end_index):\n","    if s[i]==ch:\n","      c+=1\n","  print(c)\n","\n","count_1('lolipop','l')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YvelWaPwhnV4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621941733611,"user_tz":-330,"elapsed":773,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"650b90ea-a795-4174-977d-d9602b2aa882"},"source":["# 9.WAP to find the initial index of an specified character in a string b/w limits\n","def index_1(s,ch,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  \n","  c=0\n","  for i in range(start_index,end_index):\n","    if s[i]==ch:\n","      print(i)\n","      break\n","  else:\n","    print('character not in string')\n","\n","index_1('lolipop','l')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DD9GrXdIh0Dh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621942001866,"user_tz":-330,"elapsed":320,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"f0d578e8-357e-43b0-c842-a6991a97b734"},"source":["# 10.WAP to count no of vowles and constants in a string \n","def vow_con_1(s,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  vow=0\n","  con=0\n","  for i in range(start_index,end_index):\n","    if s[i] in 'aeiou':\n","      vow+=1\n","    else:\n","      con+=1\n","  print('vowels={},consonants={}'.format(vow,con))\n","\n","vow_con_1('lolipop')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["vowels=3,consonants=4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vMlxLNb6h-hW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621942555325,"user_tz":-330,"elapsed":536,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"bbf31ad8-fc9d-4a4d-a271-5d337be3eb04"},"source":["# 11.WAP to convert specified string to uppercase\n","def upper_1(s,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  v=''\n","  for i in range(start_index,end_index):\n","    if 'a'<=s[i]<='z':\n","      v+=chr(ord(s[i])-32)\n","    else:\n","      v+=s[i]\n","  print(v)\n","\n","upper_1('lOliPOP')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["LOLIPOP\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gS9weJTQiF4E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621058031528,"user_tz":-330,"elapsed":886,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"87b019ab-45e1-42f4-e9eb-6e42a1392be5"},"source":["# WAP to SWAP 2 variables \n","def swap(a,b):\n","  a,b=b,a\n","  print(a,b)\n","swap(4,5)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["5 4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7eoyrTKsiNF3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621942931913,"user_tz":-330,"elapsed":321,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"7c432f54-b96e-4e38-d9fc-f6e0cd732743"},"source":["# 12.WAP to add series of numbers using the concept of Packing \n","def add_1(*a):\n","  sum=0\n","  for i in a:\n","    sum+=i\n","  print(sum)\n","\n","add_1()\n","add_1(1,3)\n","add_1(1,2,34,5,9)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0\n","4\n","51\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1iutEFO7iYF8"},"source":["# 13.WAP to find product of numbers using packing "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BZb7_JNt73wu"},"source":["# 14.WAP to Find 2nd Largest of 5 nos."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H-ueZePL8Ex9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622960023940,"user_tz":-330,"elapsed":409,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"5189ac3c-dd86-4f4f-a343-3941cff6f132"},"source":["# 15.WAP to convert vowels to uppercase and remaining to lowercase\n","\n","def upper_2(s,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  v=''\n","  for i in range(start_index,end_index):\n","    if s[i] in 'aeiou':\n","      v+=chr(ord(s[i])-32)\n","    elif 'A'<=s[i]<='Z' and s[i] not in 'AEIOU':\n","      v+=chr(ord(s[i])+32)\n","    else:\n","      v+=s[i]\n","  print(v)\n","\n","upper_2('Kingo')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["kIngO\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eI7u-_rp8Qxz"},"source":["# 16.WAP to check whether the string contains only alphabet or not \n","\n","def upper_2(s,start_index=0,end_index=0):\n","  if end_index==0:\n","    end_index=len(s)\n","  if end_index>len(s):\n","    end_index=len(s)\n","  v=''\n","  for i in range(start_index,end_index):\n","    if s[i] in 'aeiou':\n","      v+=chr(ord(s[i])-32)\n","    elif 'A'<=s[i]<='Z' and s[i] not in 'AEIOU':\n","      v+=chr(ord(s[i])+32)\n","    else:\n","      v+=s[i]\n","  print(v)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uOwMxQTB8aRf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622961451510,"user_tz":-330,"elapsed":518,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"cba1e1a2-129a-47a4-a7d2-340858024fb9"},"source":["# 17.Find the factorial of a number \n","\n","def fact(n):\n","  i=1\n","  fact=1\n","  while i<=n:\n","    fact=fact*i\n","    i+=1\n","  print(fact)\n","\n","fact(5)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["120\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yZgwqkGq8f_P"},"source":["# 18.WAP find the nth term of AP series "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qEVf4mKL8mrQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622961574511,"user_tz":-330,"elapsed":322,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"42d8a592-7784-4347-c188-3cfd03f710df"},"source":["# 19.WAP Count of list without using len function \n","\n","def count_list(l):\n","  c=0\n","  for i in l:\n","    c+=1\n","  return c\n","count_list([1,2,3,4,5,6])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"J7FtJ1E18tqF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622963019701,"user_tz":-330,"elapsed":307,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"0b45da1b-fc05-4911-da3e-f0f9be829d9c"},"source":["# 20.WAP to check whether given function is Palindrome or not\n","def rev(n):\n","  rev=0\n","  while n>0:\n","    rem=n%10\n","    rev=(rev*10)+rem\n","    n=n//10\n","  return rev\n","\n","\"\"\"\n","def palin(n):\n","  r=rev(n)\n","  if int(r)==int(n):\n","    return 'Palindrome'\n","  else:\n","    return 'Not Palindrome'\n","\n","palin(565)\n","\n","\"\"\"\n","def palin(n):\n","  n=str(n)\n","  if str(n)==str(n[::-1]):\n","    return True \n","  else:\n","    return False\n","\n","palin(565)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"REn9dI1C9FQe"},"source":["# 21.WAP to remove the Duplicate items from list\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QjQtE4sF9PhX","colab":{"base_uri":"https://localhost:8080/","height":334},"executionInfo":{"status":"error","timestamp":1622964172730,"user_tz":-330,"elapsed":439,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"d231a5c0-fc95-48d1-dafc-782ce3b10847"},"source":["# 22.WAP to count variaties of Data types in a list \n","\n","def count_list_2(l):\n","  s,i,t,l,d,se=0,0,0,0,0,0\n","  for i in range(len(l)):\n","    if type(l[i])=='str':\n","      s+=1\n","    elif type(l[i])=='int':\n","      i+=1\n","    elif type(l[i])=='tupple':\n","      t+=1\n","    elif type(l[i])=='list':\n","      l+=1\n","    elif type(l[i])=='dict':\n","      d+=1\n","    elif type(l[i])=='set':\n","      se+=1\n","  return s,i,t,l,d,se\n","\n","l=['hello',23246,65447,{'a':3},{5,6},(245252,8)]\n","count_list_2(l)\n","    "],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-50-142b67f3d6c6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0ml\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'hello'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m23246\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m65447\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'a'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m245252\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m \u001b[0mcount_list_2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-50-142b67f3d6c6>\u001b[0m in \u001b[0;36mcount_list_2\u001b[0;34m(l)\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcount_list_2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m   \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;34m'str'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m       \u001b[0ms\u001b[0m\u001b[0;34m+=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: object of type 'int' has no len()"]}]},{"cell_type":"code","metadata":{"id":"lGNUaR0u9ff3"},"source":["# 23.WAP to swap 1st and last value of a list "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vY7VJ33C2OrO","executionInfo":{"status":"ok","timestamp":1621582984223,"user_tz":-330,"elapsed":8549,"user":{"displayName":"Purushotham D","photoUrl":"","userId":"14797743785571761459"}},"outputId":"f9649f4d-36a0-484f-a99a-54bb8fea375e"},"source":["# 24 LCM of 2 nos\n","\n","def getter():\n","  n1=int(input(\"Enter num1: \"))\n","  n2=int(input(\"Enter num1: \"))\n","  return n1,n2\n","def greater(n1,n2):\n","  if n1>n2:\n","    return n1\n","  else:\n","    return n2\n","\n","def LCM():\n","  n1,n2=getter()\n","  g=greater(n1,n2)\n","  while True:\n","    if (g%n1==0) and (g%n2==0):\n","      LCM=g\n","      break\n","    g+=1\n","  print(LCM)\n","\n","LCM()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter num1: 6\n","Enter num1: 3\n","6\n"],"name":"stdout"}]}]}